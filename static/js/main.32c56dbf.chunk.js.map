{"version":3,"sources":["utils/apollo.js","queries.js","pages/AniList/constants.js","pages/AniList/Header/Container.js","pages/AniList/Header/BackButton.js","pages/AniList/Header/SearchButton.js","pages/AniList/Header/Pagination.js","pages/AniList/Header/Header.js","components/CenteredContent.js","components/Loading.js","pages/AniList/Anime/ImageWithLink.js","pages/AniList/Anime/Anime.js","pages/AniList/Animes.js","pages/AniList/AniList.js","pages/Home/Button.js","pages/Home/Home.js","pages/NotFound.js","consts.js","App.js","reportWebVitals.js","index.js"],"names":["checkIfInCache","query","loading","client","variables","Boolean","readQuery","error","ANIME_LIST","gql","DEFAULT_INITIAL_FORM_VALUES","search","useStyles","makeStyles","theme","root","flexShrink","minHeight","padding","display","alignItems","Container","children","classes","Paper","elevation","memo","BackButton","props","history","useHistory","IconButton","onClick","push","SearchButton","variant","color","size","endIcon","Pagination","currentPage","lastPage","changePage","disabled","rest","page","count","onChange","_","value","defaultProps","noop","Box","component","Header","refetch","setCurrentPage","initialValues","setInitialValues","hidePagination","handleSearch","a","undefined","console","window","alert","enableReinitialize","onSubmit","submitForm","resetForm","newPage","oldPage","clamp","changePageBase","mr","TextField","name","placeholder","onKeyDown","key","container","flex","height","CenteredContent","spacing","align","justify","direction","item","Loading","data","inCache","CircularProgress","isEmpty","media","mediaAdult","filter","Image","imageUrl","isAdult","title","CardMedia","className","clsx","image","ImageWithLink","url","href","target","rel","Grid","cardRoot","minWidth","maxWidth","gridContainerRoot","marginTop","Anime","titleEnglish","titleRomaji","titleJapanese","description","score","popularity","startDate","titles","uniq","x","length","cleanDescription","truncate","stripHtml","result","omission","e","dateString","month","year","Card","CardContent","Typography","gutterBottom","xs","Animes","LoadingProps","map","row","english","romaji","native","coverImage","large","siteUrl","meanScore","id","flexDirection","flexWrap","content","paddingTop","paddingBottom","paddingLeft","paddingRight","overflow","Anilist","useState","prevSubmitVars","setPrevSubmitVars","setHidePagination","setLastPage","options","useQueryBase","notifyOnNetworkStatusChange","useQuery","QUERY","omitBy","onCompleted","get","buttonRoot","margin","Button","to","onClickFromProps","classesFromProps","orientation","fullWidth","merge","Home","NotFound","secondsLeft","setSecondsLeft","useEffect","timer","setInterval","newSecondsLeft","clearInterval","mb","App","CssBaseline","disableGutters","path","AniListPage","exact","HomePage","NotFoundPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","QUERY_DEFAULT_OPTIONS","fetchPolicy","errorPolicy","ApolloClient","uri","process","GRAPHQL_URI","cache","InMemoryCache","typePolicies","Page","keyArgs","defaultOptions","watchQuery","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.32c56dbf.chunk.js","sourcesContent":["import {\n  useQuery as useQueryBase,\n  useLazyQuery as useLazyQueryBase,\n} from '@apollo/client';\n\n// Should act the same as the regular \"useQuery\", but with an extra flag\n// \"inCache\" for cases where we are waiting for a new response\n// but we have old data to show:\nexport const useQuery = (query, options = {}) => {\n  const result = useQueryBase(query, {\n    notifyOnNetworkStatusChange: true,\n    ...options,\n  });\n\n  return {\n    ...result,\n    inCache: checkIfInCache(query, result),\n  };\n}\n\nexport const useLazyQuery = (query, options) => {\n  const [getData, result] = useLazyQueryBase(query, {\n    notifyOnNetworkStatusChange: true,\n    ...options,\n  });\n\n  return [\n    getData,\n    {\n      ...result,\n      inCache: checkIfInCache(query, result),\n    },\n  ];\n}\n\nconst checkIfInCache = (query, { loading, client, variables }) => {\n  if (loading) {\n    try {\n      return Boolean(client.readQuery({ query, variables }));\n\n    } catch (error) {\n      return false;\n    }\n  }\n}\n","import { gql } from '@apollo/client';\n\nexport const ANIME_LIST = gql`\n  query getAnime(\n    $page: Int = 1,\n    $perPage: Int = 50,\n    $search: String,\n    $sort: [MediaSort] = [POPULARITY_DESC, SCORE_DESC, TITLE_ROMAJI]\n  ) {\n    Page(page: $page, perPage: $perPage) {\n      pageInfo {\n        total\n        perPage\n        currentPage\n        lastPage\n        hasNextPage\n      }\n      media(search: $search, sort: $sort) {\n        id\n        description\n        title {\n          romaji\n          english\n          native\n        }\n        coverImage {\n          large\n        }\n        siteUrl\n        bannerImage\n        isAdult\n        meanScore\n        popularity\n        startDate {\n          year\n          month\n        }\n      }\n    }\n  }\n`\n","export const DEFAULT_INITIAL_FORM_VALUES = { search: '' };\n","import React, { memo } from 'react';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    minHeight: '2rem',\n    padding: '0.5rem',\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst Container = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={2} classes={{ root: classes.root }}>\n      {children}\n    </Paper>\n  )\n}\n\nexport default memo(Container);\n","import React, { memo } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { useHistory } from 'react-router-dom';\n\nconst BackButton = props => {\n  const history = useHistory();\n\n  return (\n    <IconButton onClick={() => history.push(`/`)} {...props}>\n      <ArrowBackIcon />\n    </IconButton>\n  )\n}\n\nexport default memo(BackButton);\n","import React, { memo } from 'react';\nimport { Button } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst SearchButton = props => {\n  return (\n    <Button\n      variant='contained'\n      color='primary'\n      size='large'\n      endIcon={<SearchIcon />}\n      {...props}\n    >\n      Search\n    </Button>\n  )\n}\n\nexport default memo(SearchButton);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PaginationBase } from '@material-ui/lab';\nimport { noop } from 'lodash';\n\nconst Pagination = ({\n  currentPage,\n  lastPage,\n  changePage,\n  disabled,\n  ...rest\n}) => {\n  const handleChange = (_, value) => {\n    if (!disabled) {\n      changePage(value);\n    }\n  };\n\n  return (\n    <PaginationBase\n      page={currentPage}\n      count={lastPage}\n      color='primary'\n      onChange={handleChange}\n      disabled={disabled}\n      {...rest}\n    />\n  )\n}\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  lastPage: PropTypes.number.isRequired,\n  changePage: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n}\n\nPagination.defaultProps = {\n  currentPage: 1,\n  lastPage: 1,\n  changePage: noop,\n  disabled: false,\n}\n\nexport default memo(Pagination);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box as BoxBase } from '@material-ui/core';\nimport { Formik, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { clamp, noop } from 'lodash';\n\nimport { DEFAULT_INITIAL_FORM_VALUES } from '../constants';\nimport Container from './Container';\nimport BackButton from './BackButton';\nimport SearchButton from './SearchButton';\nimport Pagination from './Pagination';\n\nconst Box = props => <BoxBase component='span' {...props} />\n\nconst Header = ({\n  refetch,\n  currentPage,\n  setCurrentPage,\n  lastPage,\n  initialValues,\n  setInitialValues,\n  hidePagination,\n  loading,\n}) => {\n  const handleSearch = async variables => {\n    try {\n      const { search, ...rest } = variables;\n\n      await refetch({\n        ...rest,\n        // https://github.com/apollographql/react-apollo/issues/2300:\n        search: search || undefined,\n        page: 1,\n      });\n\n      setInitialValues(variables);\n\n    } catch (e) {\n      console.error(e);\n      // TODO A nicer looking error with a better message\n      window.alert('Error fetching data!');\n    }\n  }\n\n  const changePageBase = ({ resetForm }) => async newPage => {\n    resetForm();\n    const oldPage = currentPage;\n\n    try {\n      // Needed as onCompleted does not fire when loading from cache afaik\n      setCurrentPage(newPage);\n      await refetch({ page: clamp(newPage, 1, lastPage) });\n\n    } catch (e) {\n      setCurrentPage(oldPage);\n\n      console.error(e);\n      window.alert('Error fetching more data!');\n    }\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      enableReinitialize={true}\n      onSubmit={handleSearch}\n    >\n      {({ submitForm, resetForm }) => {\n        const changePage = changePageBase({ resetForm });\n\n        return (\n          <Container>\n            <Box mr={4}>\n              <BackButton />\n            </Box>\n\n            <Box mr={2}>\n              <Field\n                component={TextField}\n                name='search'\n                placeholder='All shows'\n                variant='outlined'\n                onKeyDown={({ key }) => {\n                  if (key === \"Enter\") submitForm();\n                }}\n              />\n            </Box>\n\n            <SearchButton onClick={submitForm} disabled={loading} />\n\n            {\n              !hidePagination && (\n                <Pagination\n                  currentPage={currentPage}\n                  lastPage={lastPage}\n                  changePage={changePage}\n                  disabled={loading}\n                />\n              )\n            }\n          </Container>\n        )\n      }}\n    </Formik>\n  )\n}\n\nHeader.propTypes = {\n  refetch: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  setCurrentPage: PropTypes.func.isRequired,\n  lastPage: PropTypes.number.isRequired,\n  initialValues: PropTypes.object,\n  setInitialValues: PropTypes.func.isRequired,\n  hidePagination: PropTypes.bool,\n  loading: PropTypes.bool,\n}\n\nHeader.defaultProps = {\n  refetch: noop,\n  currentPage: 1,\n  lastPage: 1,\n  initialValues: DEFAULT_INITIAL_FORM_VALUES,\n  setInitialValues: noop,\n  hidePagination: true,\n  loading: false,\n}\n\nexport default memo(Header);\n","import React, { memo } from 'react';\nimport { Container, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    flex: 1,\n    height: '100%',\n  },\n}));\n\nconst CenteredContent = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <Container classes={{ root: classes.container }}>\n      <Grid\n        container\n        classes={{ root: classes.container }}\n        spacing={0}\n        align='center'\n        justify='center'\n        direction='column'\n      >\n        <Grid item>\n          {children}\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default memo(CenteredContent);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularProgress } from '@material-ui/core';\nimport { isEmpty } from 'lodash';\nimport CenteredContent from './CenteredContent';\n\nconst Loading = ({\n  data,\n  loading,\n  inCache,\n  error,\n  children\n}) => {\n  if (!inCache && loading) {\n    return (\n      <CenteredContent>\n        <CircularProgress />\n      </CenteredContent>\n    )\n  }\n\n  // TODO a better error message\n  if (error) {\n    return (\n      <CenteredContent>\n        Error loading data\n      </CenteredContent>\n    )\n  }\n\n  if (isEmpty(data)) {\n    return (\n      <CenteredContent>\n        No data found\n      </CenteredContent>\n    )\n  }\n\n  return children;\n}\n\nLoading.propTypes = {\n  loading: PropTypes.bool,\n  inCache: PropTypes.bool,\n  error: PropTypes.object,\n}\n\nLoading.defaultProps = {\n  loading: true,\n  inCache: false,\n  children: null,\n}\n\nexport default memo(Loading);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { CardMedia } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles({\n  media: {\n    height: '10rem',\n  },\n  mediaAdult: {\n    filter: 'blur(1rem)',\n    '&:hover': {\n      filter: 'none',\n    },\n  }\n});\n\nconst Image = memo(({ imageUrl, isAdult, title }) => {\n  const classes = useStyles();\n\n  return (\n    <CardMedia\n      className={clsx({\n        [classes.media]: true,\n        [classes.mediaAdult]: isAdult,\n      })}\n      image={imageUrl}\n      title={title}\n    />\n  )\n});\n\nconst ImageWithLink = ({ url, ...rest }) => {  \n  if (url) {\n    return (\n      <a href={url} target='_blank' rel='noreferrer'>\n        <Image {...rest} />\n      </a>\n    )\n  }\n  \n  return <Image {...rest} />\n}\n\nImageWithLink.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  isAdult: PropTypes.bool,\n  title: PropTypes.string,\n}\n\nImageWithLink.defaultProps = {\n  isAdult: false,\n}\n\nexport default memo(ImageWithLink);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid as GridBase,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RatingIcon from '@material-ui/icons/StarHalf';\nimport PopularityIcon from '@material-ui/icons/People';\nimport TimeIcon from '@material-ui/icons/Schedule';\nimport { uniq, truncate } from 'lodash';\nimport { stripHtml } from 'string-strip-html';\nimport ImageWithLink from './ImageWithLink';\n\nconst MAX_DESCRIPTION_LENGTH = 160;\n\nconst Grid = ({ children, ...rest }) => (\n  <GridBase\n    container\n    justify='center'\n    alignItems='center'\n    {...rest}\n  >\n    {children}\n  </GridBase>\n)\n\nconst useStyles = makeStyles({\n  cardRoot: {\n    minWidth: '15rem',\n    maxWidth: '20rem',\n  },\n  gridContainerRoot: {\n    marginTop: '1rem',\n  },\n});\n\nconst Anime = ({\n  titleEnglish,\n  titleRomaji,\n  titleJapanese,\n  imageUrl,\n  url,\n  isAdult,\n  description,\n  score,\n  popularity,\n  startDate,\n}) => {\n  const classes = useStyles();\n\n  const titles = uniq([\n    titleEnglish,\n    titleRomaji,\n    titleJapanese,\n  ]).filter(x => x);\n\n  const title = titles.length > 1\n    ? `${titles[0]} (${titles[1]})`\n    : `${titles[0]}`;\n\n  let cleanDescription = '';\n  try {\n    cleanDescription = truncate(stripHtml(description).result, {\n      length: MAX_DESCRIPTION_LENGTH,\n      omission: '...',\n    });\n  } catch(e) {}\n\n\n  const dateString = startDate.month && startDate.year\n    ? `${startDate.month}/${startDate.year}`\n    : '';\n\n  return (\n    <Card className={classes.cardRoot}>\n      <ImageWithLink\n        imageUrl={imageUrl}\n        url={url}\n        isAdult={isAdult}\n        title={title}\n      />\n\n      <CardContent>\n        <Typography gutterBottom variant='h6' component='h2'>\n          {title}\n        </Typography>\n\n        {\n          cleanDescription && (\n            <Typography variant='body2' color='textSecondary' component='p'>\n              {cleanDescription}\n            </Typography>\n          )\n        }\n\n        <Grid classes={{ root: classes.gridContainerRoot }}>\n          <Grid item xs={4}>\n            <PopularityIcon /> {popularity}\n          </Grid>\n\n          <Grid item xs={4}>\n            <RatingIcon /> {score}\n          </Grid>\n          \n          <Grid item xs={4}>\n            {dateString && (<>\n              <TimeIcon /> {dateString}\n            </>)}\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nAnime.propTypes = {\n  titleEnglish: PropTypes.string,\n  titleRomaji: PropTypes.string,\n  titleJapanese: PropTypes.string,\n  imageUrl: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  description: PropTypes.string,\n  isAdult: PropTypes.bool,\n  score: PropTypes.number,\n  popularity: PropTypes.number,\n  startDate: PropTypes.object,\n}\n\nAnime.defaultProps = {\n  isAdult: false,\n  score: 0,\n  popularity: 0,\n  startDate: {},\n}\n\nexport default memo(Anime);\n","// Yes the grammar on the filename is wrong, but it's useful\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport Loading from 'components/Loading';\nimport Anime from './Anime';\n\nconst Animes = ({ data, ...LoadingProps }) => {\n  return (\n    <Loading data={data} {...LoadingProps}>\n      <Grid container spacing={4}>\n        {data.map(row => (\n          <Grid key={row.id} item>\n            <Anime\n              titleEnglish={row?.title?.english}\n              titleRomaji={row?.title?.romaji}\n              titleJapanese={row?.title?.native}\n              imageUrl={row?.coverImage?.large}\n              url={row?.siteUrl}\n              description={row?.description}\n              isAdult={row?.isAdult}\n              score={row?.meanScore}\n              popularity={row?.popularity}\n              startDate={row?.startDate}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Loading>\n  )\n}\n\nAnimes.propTypes = {\n  data: PropTypes.array,\n  loading: PropTypes.bool,\n  inCache: PropTypes.bool,\n}\n\nAnimes.defaultProps = {\n  data: [],\n  loading: false,\n  inCache: false,\n}\n\nexport default memo(Animes);\n","import React, { useState, memo } from 'react';\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { get, isEmpty, omitBy } from 'lodash';\n\nimport { useQuery } from 'utils';\nimport { ANIME_LIST as QUERY } from 'queries';\nimport { DEFAULT_INITIAL_FORM_VALUES } from './constants';\nimport Header from './Header';\nimport Animes from './Animes';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    height: '100vh',\n  },\n  content: {\n    flex: 1,\n    paddingTop: '2rem',\n    paddingBottom: '2rem',\n    paddingLeft: '4rem',\n    paddingRight: '4rem',\n    overflow: 'auto',\n  },\n}));\n\nconst Anilist = () => {\n  const classes = useStyles();\n\n  const [prevSubmitVars, setPrevSubmitVars] = useState(DEFAULT_INITIAL_FORM_VALUES);\n  const [hidePagination, setHidePagination] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastPage, setLastPage] = useState(1);\n\n  const result = useQuery(QUERY, {\n    variables: omitBy(DEFAULT_INITIAL_FORM_VALUES, isEmpty),\n    onCompleted: () => {\n      setHidePagination(false);\n\n      setCurrentPage(get(result, 'data.Page.pageInfo.currentPage', 1));\n      setLastPage(get(result, 'data.Page.pageInfo.lastPage', 1));\n    },\n  });\n\n  const data = get(result, 'data.Page.media', []);\n\n  return (\n    <>\n      <Header\n        refetch={result?.refetch}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n        lastPage={lastPage}\n        initialValues={prevSubmitVars}\n        setInitialValues={setPrevSubmitVars}\n        hidePagination={hidePagination}\n        loading={result?.loading && !result?.inCache}\n      />\n\n      <Container className={classes.content} maxWidth='xl'>\n        <Animes\n          data={data}\n          loading={result?.loading}\n          inCache={result?.inCache}\n          error={result?.error}\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default memo(Anilist);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button as MuiButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { merge } from 'lodash';\n\nconst useStyles = makeStyles(theme => ({\n  buttonRoot: {\n    padding: '1rem',\n    margin: '1rem',\n  },\n}));\n\nconst Button = ({\n  to,\n  disabled,\n  onClick: onClickFromProps,\n  classes: classesFromProps,\n  children,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const onClick = onClickFromProps\n    ? onClickFromProps\n    : (to ? () => history.push(to) : undefined)\n\n  return (\n    <MuiButton\n      orientation='vertical'\n      variant='contained'\n      size='large'\n      color='primary'\n      fullWidth\n      disabled={disabled}\n      onClick={onClick}\n      classes={merge({\n        root: classes.buttonRoot,\n      }, classesFromProps)}\n      {...rest}\n    >\n      {children}\n    </MuiButton>\n  )\n}\n\nButton.propTypes = {\n  to: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  classes: PropTypes.object,\n}\n\nButton.defaultProps = {\n  disabled: false,\n}\n\nexport default memo(Button);\n","import React, { memo } from 'react';\nimport CenteredContent from 'components/CenteredContent';\nimport Button from './Button';\n\nconst Home = () => {\n  return (\n    <CenteredContent>\n      <Button to='/anilist'>List of Anime</Button>\n      <Button to='/qwerty'>This button will 404</Button>\n      <Button to='/azerty' color='secondary'>This button will also 404</Button>\n      <Button onClick={() => window.alert('!')} variant='outlined'>This button will alert</Button>\n      <Button disabled={true}>Disabled button</Button>\n    </CenteredContent>\n  )\n}\n\nexport default memo(Home);\n","import React, { useEffect, useState, memo } from 'react';\nimport { Box } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport CenteredContent from 'components/CenteredContent';\nimport { REDIRECT_TIME_SECONDS } from 'consts';\n\nconst NotFound = () => {\n  const history = useHistory();\n  const [secondsLeft, setSecondsLeft] = useState(REDIRECT_TIME_SECONDS);\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      const newSecondsLeft = secondsLeft - 1\n      setSecondsLeft(newSecondsLeft);\n\n      if (newSecondsLeft <= 0) {\n        history.push(`/`);\n        clearInterval(timer);\n      }\n\n    }, 1000);\n\n    return () => clearInterval(timer);\n  });\n\n  return (\n    <CenteredContent>\n      <Box mb={4}>\n        Page not found! Redirecting back to the home page in {secondsLeft} second{secondsLeft > 1 ? 's' : ''}.\n      </Box>\n\n      <Box>Or click <Link to='/'>here</Link>.</Box>\n    </CenteredContent>\n  )\n}\n\nexport default memo(NotFound);\n","// NOTE: The filename 'constants' will not work\nexport const DEFAULT_GRAPHQL_URI = 'https://graphql.anilist.co';\n\nexport const REDIRECT_TIME_SECONDS = 3;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { CssBaseline, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AniListPage from 'pages/AniList';\nimport HomePage from 'pages/Home';\nimport NotFoundPage from 'pages/NotFound';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    height: '100vh',\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <CssBaseline />\n      \n      <Container maxWidth={false} disableGutters={true} className={classes.container} id='app-container'>\n        <Switch>\n          <Route path='/anilist' component={AniListPage} />\n          <Route exact path='/' component={HomePage} />\n\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Container>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { DEFAULT_GRAPHQL_URI } from './consts';\n\nconst QUERY_DEFAULT_OPTIONS = {\n  fetchPolicy: 'cache-and-network',\n  errorPolicy: 'all',\n}\n\nconst client = new ApolloClient({\n  uri: process.env.GRAPHQL_URI || DEFAULT_GRAPHQL_URI,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Page: {\n        // TODO Check if nested keys work (probably not)\n        keyArgs: ['pageInfo.page', 'pageInfo.perPage', 'media.search'],\n        merge: true,\n      },\n    },\n  }),\n});\n\n// https://github.com/apollographql/apollo-client/issues/2555#issuecomment-648280766:\nclient.defaultOptions = {\n  // https://github.com/apollographql/apollo-client/issues/2555#issuecomment-490866804:\n  watchQuery: QUERY_DEFAULT_OPTIONS,\n  query: QUERY_DEFAULT_OPTIONS,\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}